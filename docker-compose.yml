version: '3.8'

services:

  # Nginx como gateway reverso para os microserviços
  nginx:
      image: nginx:latest
      container_name: nginx-gateway
      ports:
        - "80:80"
      volumes:
        - ./nginx.conf:/etc/nginx/nginx.conf:ro
      depends_on:
        - usuarioservice
        - salaservice
        - reservaservice
      networks:
        - microservice-net

  # RabbitMQ para comunicação entre microserviços
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - microservice-net

  # Banco de dados do usuarioservice
  postgres-usuario:
    image: postgres:15
    container_name: postgres-usuario
    environment:
      POSTGRES_DB: usersdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - pgdata-usuario:/var/lib/postgresql/data
    networks:
      - microservice-net

  # Serviço de usuários
  usuarioservice:
    build: ./usuarioservice
    container_name: usuarioservice
    ports:
      - "8081:8083"  # mapeando corretamente a porta 8083 interna
    depends_on:
      - postgres-usuario
    networks:
      - microservice-net

  # Banco de dados do salaservice
  postgres-sala:
    image: postgres:15
    container_name: postgres-sala
    environment:
      POSTGRES_DB: salasdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5434:5432"
    volumes:
      - pgdata-sala:/var/lib/postgresql/data
    networks:
      - microservice-net

  # Serviço de salas
  salaservice:
    build: ./salaservice
    container_name: salaservice
    ports:
      - "8082:8082" 
    depends_on:
      - postgres-sala
    networks:
      - microservice-net

  # Banco de dados do reservaservice
  postgres-reserva:
    image: postgres:15
    container_name: postgres-reserva
    environment:
      POSTGRES_DB: reservasdb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5435:5432"
    volumes:
      - pgdata-reserva:/var/lib/postgresql/data
    networks:
      - microservice-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Serviço de reservas
  reservaservice:
    build: ./reservaservice
    container_name: reservaservice
    ports:
    - "8084:8084"
    depends_on:
      postgres-reserva:
        condition: service_healthy
    networks:
      - microservice-net

# Volumes para persistência de dados dos bancos de dados
volumes:
  pgdata-usuario:
  pgdata-sala:
  pgdata-reserva:

# Definição da rede para os microserviços
networks:
  microservice-net:
